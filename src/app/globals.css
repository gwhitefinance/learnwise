@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 0 0% 100%;
  --foreground: 222.2 84% 4.9%;
  --card: 0 0% 100%;
  --card-foreground: 222.2 84% 4.9%;
  --popover: 0 0% 100%;
  --popover-foreground: 222.2 84% 4.9%;
  --primary: 221.2 83.2% 53.3%;
  --primary-foreground: 210 40% 98%;
  --secondary: 210 40% 96.1%;
  --secondary-foreground: 222.2 47.4% 11.2%;
  --muted: 210 40% 96.1%;
  --muted-foreground: 215.4 16.3% 46.9%;
  --accent: 210 40% 96.1%;
  --accent-foreground: 222.2 47.4% 11.2%;
  --destructive: 0 84.2% 60.2%;
  --destructive-foreground: 210 40% 98%;
  --border: 214.3 31.8% 91.4%;
  --input: 214.3 31.8% 91.4%;
  --ring: 222.2 84% 4.9%;
  --radius: 0.5rem;
}

.dark {
  --background: 222.2 84% 4.9%;
  --foreground: 210 40% 98%;
  --card: 222.2 84% 4.9%;
  --card-foreground: 210 40% 98%;
  --popover: 222.2 84% 4.9%;
  --popover-foreground: 210 40% 98%;
  --primary: 217.2 91.2% 59.8%;
  --primary-foreground: 222.2 47.4% 11.2%;
  --secondary: 217.2 32.6% 17.5%;
  --secondary-foreground: 210 40% 98%;
  --muted: 217.2 32.6% 17.5%;
  --muted-foreground: 215 20.2% 65.1%;
  --accent: 217.2 32.6% 17.5%;
  --accent-foreground: 210 40% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 210 40% 98%;
  --border: 217.2 32.6% 17.5%;
  --input: 217.2 32.6% 17.5%;
  --ring: 224.3 76.3% 48%;
}

@layer base {
  body {
    @apply bg-background text-foreground;
  }
}

@layer utilities {
  .bg-grid-slate-200\/50 {
    background-image: linear-gradient(currentColor 1px, transparent 1px),
      linear-gradient(to right, currentColor 1px, transparent 1px);
    background-size: 20px 20px;
  }
  
  .halloween-bg {
    background-color: #0c0a1a;
    background-image:
        radial-gradient(ellipse at 20% 20%, #4c1d95 0%, transparent 40%),
        radial-gradient(ellipse at 80% 10%, #7c3aed 0%, transparent 35%);
    position: relative;
    overflow: hidden;
  }

  .halloween-bg::before, .halloween-bg::after {
      content: '';
      position: absolute;
      width: 1px;
      height: 1px;
      border-radius: 50%;
      box-shadow: 
          /* Static stars */
          10vw 10vh 0 0 #fff, 25vw 40vh 0 1px #fff, 80vw 20vh 0 0px #fff, 
          90vw 70vh 0 1px #fff, 50vw 90vh 0 0px #fff, 5vw 80vh 0 1px #fff,
          45vw 5vh 0 0px #fff, 65vw 55vh 0 1px #fff, 85vw 95vh 0 0px #fff,
          /* Twinkling stars */
          var(--twinkle-stars-1), var(--twinkle-stars-2);
      animation: twinkle 5s alternate infinite;
  }
  .halloween-bg::after {
      box-shadow: 
          15vw 60vh 0 0px #fff, 35vw 85vh 0 1px #fff, 75vw 45vh 0 0px #fff,
          55vw 25vh 0 1px #fff, 95vw 5vh 0 0px #fff;
      animation-delay: -2.5s;
  }

  .halloween-welcome {
      background: #111827; /* Dark blue/gray, like a night sky */
      border: 1px solid #4f46e5;
      position: relative;
  }
  .halloween-welcome::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 400px;
      height: 400px;
      background: radial-gradient(circle, rgba(255,255,220,0.4) 0%, rgba(255,255,220,0) 60%);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      pointer-events: none;
  }
  
  .halloween-bg .halloween-welcome .halloween-scene {
    position: absolute;
    bottom: 0;
    right: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
  }
  .halloween-bg .bat-container {
      position: absolute;
      left: 50%;
      top: 50%;
      transform-origin: center;
      animation: fly 8s linear infinite;
  }
  .halloween-bg .bat {
      width: 30px;
      height: 20px;
      background: #000;
      clip-path: polygon(50% 0, 100% 50%, 80% 100%, 50% 70%, 20% 100%, 0 50%);
      animation: flap 0.3s infinite;
  }
  
  .halloween-bg:root {
      --primary-halloween: 27 89% 53%; /* orange-600 */
      --card-halloween: 224 71% 4%; /* gray-950 with a hint of blue */
      --border-halloween: 240 4% 16%; /* gray-800 */
      
      --primary: var(--primary-halloween);
      --card: var(--card-halloween);
      --border: var(--border-halloween);
  }
  .halloween-bg .card,
  .halloween-bg .dialog-content { /* Assuming DialogContent has this class */
      box-shadow: 0 0 15px rgba(249, 115, 22, 0.3), inset 0 0 5px rgba(249, 115, 22, 0.2);
  }

  .dark-grid {
    background-color: hsl(var(--background));
    background-image:
        linear-gradient(rgba(255, 255, 255, 0.07) 1px, transparent 1px),
        linear-gradient(to right, rgba(255, 255, 255, 0.07) 1px, transparent 1px);
    background-size: 40px 40px;
  }
}

.react-draggable {
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
}

@keyframes twinkle {
  0% {
    --twinkle-stars-1: 5vw 50vh 0 1px rgba(255,255,255,1), 30vw 30vh 0 0px rgba(255,255,255,1), 70vw 70vh 0 1px rgba(255,255,255,1);
    --twinkle-stars-2: 20vw 80vh 0 0px rgba(255,255,255,1), 95vw 35vh 0 1px rgba(255,255,255,1);
  }
  100% {
    --twinkle-stars-1: 5vw 50vh 0 0px rgba(255,255,255,0.2), 30vw 30vh 0 1px rgba(255,255,255,0.2), 70vw 70vh 0 0px rgba(255,255,255,0.2);
    --twinkle-stars-2: 20vw 80vh 0 1px rgba(255,255,255,0.2), 95vw 35vh 0 0px rgba(255,255,255,0.2);
  }
}
@keyframes fly {
    0% { transform: translate(-100px, 0px) scale(0.8) rotateZ(10deg); }
    50% { transform: translate(100px, -40px) scale(1.2) rotateZ(-5deg); }
    100% { transform: translate(250px, 20px) scale(0.7) rotateZ(15deg); }
}
@keyframes flap {
    0%, 100% { clip-path: polygon(50% 20%, 100% 50%, 80% 100%, 50% 70%, 20% 100%, 0 50%); }
    50% { clip-path: polygon(50% 0, 100% 40%, 80% 90%, 50% 60%, 20% 90%, 0 40%); }
}

html.lenis {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

@keyframes speech-bubble-appear {
  0% {
    opacity: 0;
    transform: scale(0.8) translateY(10px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.speech-bubble {
  animation: speech-bubble-appear 0.5s ease-out forwards;
}

.speech-bubble::after {
  content: '';
  position: absolute;
  bottom: 1rem;
  left: -0.75rem;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent;
  border-right: 15px solid hsl(var(--card)); /* Match bubble background */
}

@keyframes float-bubble {
  0% { transform: translateY(0px) rotate(-1deg); }
  50% { transform: translateY(-8px) rotate(1deg); }
  100% { transform: translateY(0px) rotate(-1deg); }
}

.thought-bubble {
  animation: float-bubble 6s ease-in-out infinite;
}
