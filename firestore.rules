
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /courses/{courseId} {
      allow read;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /roadmaps/{roadmapId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /chatSessions/{sessionId} {
      allow read, update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /notes/{noteId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /projects/{projectId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /recentFiles/{fileId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /calendarEvents/{eventId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /quizAttempts/{attemptId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /quizResults/{resultId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /squads/{squadId} {
      allow read: if request.auth != null && resource.data.members.hasAny([request.auth.uid]);
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      allow update: if request.auth != null && resource.data.ownerId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.ownerId == request.auth.uid;

      match /memberDetails/{memberId} {
        allow read: if request.auth != null && exists(/databases/$(database)/documents/squads/$(squadId)) && get(/databases/$(database)/documents/squads/$(squadId)).data.members.hasAny([request.auth.uid]);
        allow create, update, delete: if request.auth != null && exists(/databases/$(database)/documents/squads/$(squadId)) && get(/databases/$(database)/documents/squads/$(squadId)).data.ownerId == request.auth.uid;
      }
      
      match /projects/{projectId} {
         allow read, create, update, delete: if request.auth != null && exists(/databases/$(database)/documents/squads/$(squadId)) && get(/databases/$(database)/documents/squads/$(squadId)).data.members.hasAny([request.auth.uid]);
      }
    }
    
     match /satTestResults/{testId} {
      allow read, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
