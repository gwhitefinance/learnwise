rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }

    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /roadmaps/{roadmapId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    match /calendarEvents/{eventId} {
      allow read, write: if isOwner(request.resource.data.userId);
    }

    match /notes/{noteId} {
      allow read, write: if isOwner(request.resource.data.userId);
    }

    match /projects/{projectId} {
        allow read, write: if isOwner(request.resource.data.userId);
    }
    
    match /recentFiles/{fileId} {
        allow read, write: if isOwner(request.resource.data.userId);
    }
    
    match /squads/{squadId} {
      allow read: if request.auth != null && resource.data.members.hasAny([request.auth.uid]);
      allow create: if request.auth != null;
      allow update: if request.auth != null && resource.data.ownerId == request.auth.uid;
      allow delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }

    match /squads/{squadId}/memberDetails/{memberId} {
      allow read: if request.auth != null && exists(/databases/$(database)/documents/squads/$(squadId)) && get(/databases/$(database)/documents/squads/$(squadId)).data.members.hasAny([request.auth.uid]);
      allow write: if request.auth != null && request.auth.uid == memberId; // Allow users to join
    }
    
    match /squads/{squadId}/projects/{projectId} {
       allow read, write: if request.auth != null && exists(/databases/$(database)/documents/squads/$(squadId)) && get(/databases/$(database)/documents/squads/$(squadId)).data.members.hasAny([request.auth.uid]);
    }

    match /chatSessions/{sessionId} {
      allow read, write: if isOwner(request.resource.data.userId);
    }

    match /quizAttempts/{attemptId} {
       allow read, write: if isOwner(request.resource.data.userId);
    }
    
    match /quizResults/{resultId} {
       allow read, write: if isOwner(request.resource.data.userId);
    }

    match /satTestResults/{resultId} {
      allow read, write: if isOwner(request.resource.data.userId);
    }
  }
}
