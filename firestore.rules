rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read/write their own user document
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Courses can only be created, read, updated or deleted by the user who owns them
    match /courses/{courseId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Roadmaps are linked to a course, so we can check against the course document
    match /roadmaps/{roadmapId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/courses/$(request.resource.data.courseId)).data.userId == request.auth.uid;
    }

    // Notes can only be created, read, updated or deleted by the user who owns them
    match /notes/{noteId} {
       allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Chat sessions can only be accessed by the user who created them
    match /chatSessions/{sessionId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Calendar events can only be accessed by their owner
    match /calendarEvents/{eventId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Projects can only be accessed by their owner
    match /projects/{projectId} {
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Recent files can only be accessed by their owner
    match /recentFiles/{fileId} {
        allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Quiz attempts can be written by their owner.
    // They can be read individually or as a list, but only if the query filters by the owner's userId.
    match /quizAttempts/{attemptId} {
        allow write: if request.auth != null && request.resource.data.userId == request.auth.uid;
        allow read: if request.auth != null && (
          resource.data.userId == request.auth.uid ||
          (request.query.limit <= 10 && request.query.where.size() > 0 && request.query.where[0][0] == 'userId' && request.query.where[0][2] == request.auth.uid)
        );
    }
  }
}
