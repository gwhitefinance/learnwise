
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to read and write their own user profile data
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Allow users to manage their own courses
    match /courses/{courseId} {
       allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Allow users to manage their own projects
    match /projects/{projectId} {
       allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Allow users to manage their own recent files
    match /recentFiles/{fileId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Allow users to manage their own notes
    match /notes/{noteId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Allow users to manage their own calendar events
    match /calendarEvents/{eventId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }
    
    // Allow users to manage their own quiz attempts
    match /quizAttempts/{attemptId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Allow users to manage their own quiz results
    match /quizResults/{resultId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }

    // Allow users to manage their own roadmaps
    match /roadmaps/{roadmapId} {
        allow read, write: if request.auth.uid == resource.data.userId;
    }
    
    // Allow users to read their own test results
    match /satTestResults/{resultId} {
      allow read: if request.auth.uid == resource.data.userId;
      allow write: if request.auth.uid == request.resource.data.userId;
    }
    
    match /squads/{squadId} {
        allow read: if request.auth.uid in resource.data.members;
        allow create: if request.auth.uid == request.resource.data.ownerId && request.auth.uid in request.resource.data.members;
        allow update: if request.auth.uid == resource.data.ownerId; // Allow owner to update
    }

    match /chatSessions/{sessionId} {
      allow read, write: if request.auth.uid == resource.data.userId;
      // Allow public read if isPublic is true
      allow get: if resource.data.isPublic == true;
    }
  }
}
