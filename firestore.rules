rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read/write their own user document
    match /users/{userId} {
      allow read, update, create: if request.auth != null && request.auth.uid == userId;
    }

    // Rules for collections where documents contain a 'userId' field
    match /{collection}/{docId} {
      // Allow read/write access only to the user who owns the document
      allow read, write: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // Allow users to list (query) documents from collections if they are filtering by their own userId.
    // This is necessary for pages that fetch all of a user's items, like the calendar or notes page.
    match /courses/{courseId} {
       allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
       allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /roadmaps/{roadmapId} {
        allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
        allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /notes/{noteId} {
       allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
       allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /chatSessions/{sessionId} {
      allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    match /calendarEvents/{eventId} {
      allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /projects/{projectId} {
      allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /recentFiles/{fileId} {
       allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
       allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    match /quizAttempts/{attemptId} {
       allow list: if request.auth != null && request.query.where.userId == request.auth.uid;
       allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
